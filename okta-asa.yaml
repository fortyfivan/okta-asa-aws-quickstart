#This CloudFormation template deploys the complete infrastructure
AWSTemplateFormatVersion: '2010-09-09' 

#VPC Parameters

Parameters:
  AvailabilityZone1:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: Availability Zone 1
  AvailabilityZone2:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: Availability Zone 2

#VPC Resources Parameters

  EnrollmentToken:
    Type: String
    Description: Okta Advanced Server Access Enrollment Token
  
  BastionName:
    Type: String
    Description: The shared name of the bastion hosts in Okta
    Default: bastion
  
  TargetServer1Name:
    Type: String
    Description: The canonical name for the target instance in the 1st private subnet
    Default: target1
  
  TargetServer2Name:
    Type: String
    Description: The canonical name for the target instance in the 2nd private subnet
    Default: target2

  BastionHostsInstanceType:
    Type: String
    Default: t2.micro
    AllowedValues: [a1.medium,a1.large,a1.xlarge,a1.2xlarge,a1.4xlarge,m4.large,m4.xlarge,m4.2xlarge,m4.4xlarge,m4.10xlarge,m4.16xlarge,m5.large,m5.xlarge,m5.2xlarge,m5.4xlarge,m5.8xlarge,m5.12xlarge,m5.16xlarge,m5.24xlarge,m5.metal,m5a.large,m5a.xlarge,m5a.2xlarge,m5a.4xlarge,m5a.8xlarge,m5a.12xlarge,m5a.16xlarge,m5a.24xlarge,m5ad.large,m5ad.xlarge,m5ad.2xlarge,m5ad.4xlarge,m5ad.12xlarge,m5ad.24xlarge,m5d.large,m5d.xlarge,m5d.2xlarge,m5d.4xlarge,m5d.8xlarge,m5d.12xlarge,m5d.16xlarge,m5d.24xlarge,m5d.metal,t2.nano,t2.micro,t2.small,t2.medium,t2.large,t2.xlarge,t2.2xlarge,t3.nano,t3.micro,t3.small,t3.medium,t3.large,t3.xlarge,t3.2xlarge,t3a.nano,t3a.micro,t3a.small,t3a.medium,t3a.large,t3a.xlarge,t3a.2xlarge,c4.large,c4.xlarge,c4.2xlarge,c4.4xlarge,c4.8xlarge,c5.large,c5.xlarge,c5.2xlarge,c5.4xlarge,c5.9xlarge,c5.12xlarge,c5.18xlarge,c5.24xlarge,c5.metal,c5d.large,c5d.xlarge,c5d.2xlarge,c5d.4xlarge,c5d.9xlarge,c5d.18xlarge,c5n.large,c5n.xlarge,c5n.2xlarge,c5n.4xlarge,c5n.9xlarge,c5n.18xlarge,r4.large,r4.xlarge,r4.2xlarge,r4.4xlarge,r4.8xlarge,r4.16xlarge,r5.large,r5.xlarge,r5.2xlarge,r5.4xlarge,r5.8xlarge,r5.12xlarge,r5.16xlarge,r5.24xlarge,r5.metal,r5a.large,r5a.xlarge,r5a.2xlarge,r5a.4xlarge,r5a.8xlarge,r5a.12xlarge,r5a.16xlarge,r5a.24xlarge,r5ad.large,r5ad.xlarge,r5ad.2xlarge,r5ad.4xlarge,r5ad.12xlarge,r5ad.24xlarge,r5d.large,r5d.xlarge,r5d.2xlarge,r5d.4xlarge,r5d.8xlarge,r5d.12xlarge,r5d.16xlarge,r5d.24xlarge,r5d.metal,u-6tb1.metal,u-9tb1.metal,u-12tb1.metal,x1.16xlarge,x1.32xlarge,x1e.xlarge,x1e.2xlarge,x1e.4xlarge,x1e.8xlarge,x1e.16xlarge,x1e.32xlarge,z1d.large,z1d.xlarge,z1d.2xlarge,z1d.3xlarge,z1d.6xlarge,z1d.12xlarge,z1d.metal,d2.xlarge,d2.2xlarge,d2.4xlarge,d2.8xlarge,h1.2xlarge,h1.4xlarge,h1.8xlarge,h1.16xlarge,i3.large,i3.xlarge,i3.2xlarge,i3.4xlarge,i3.8xlarge,i3.16xlarge,i3.metal,i3en.large,i3en.xlarge,i3en.2xlarge,i3en.3xlarge,i3en.6xlarge,i3en.12xlarge,i3en.24xlarge,f1.2xlarge,f1.4xlarge,f1.16xlarge,g3s.xlarge,g3.4xlarge,g3.8xlarge,g3.16xlarge,p2.xlarge,p2.8xlarge,p2.16xlarge,p3.2xlarge,p3.8xlarge,p3.16xlarge,p3dn.24xlarge]
    Description: Size of Bastion Hosts

  PrivateInstancesType:
    Type: String
    Default: t2.micro
    AllowedValues: [a1.medium,a1.large,a1.xlarge,a1.2xlarge,a1.4xlarge,m4.large,m4.xlarge,m4.2xlarge,m4.4xlarge,m4.10xlarge,m4.16xlarge,m5.large,m5.xlarge,m5.2xlarge,m5.4xlarge,m5.8xlarge,m5.12xlarge,m5.16xlarge,m5.24xlarge,m5.metal,m5a.large,m5a.xlarge,m5a.2xlarge,m5a.4xlarge,m5a.8xlarge,m5a.12xlarge,m5a.16xlarge,m5a.24xlarge,m5ad.large,m5ad.xlarge,m5ad.2xlarge,m5ad.4xlarge,m5ad.12xlarge,m5ad.24xlarge,m5d.large,m5d.xlarge,m5d.2xlarge,m5d.4xlarge,m5d.8xlarge,m5d.12xlarge,m5d.16xlarge,m5d.24xlarge,m5d.metal,t2.nano,t2.micro,t2.small,t2.medium,t2.large,t2.xlarge,t2.2xlarge,t3.nano,t3.micro,t3.small,t3.medium,t3.large,t3.xlarge,t3.2xlarge,t3a.nano,t3a.micro,t3a.small,t3a.medium,t3a.large,t3a.xlarge,t3a.2xlarge,c4.large,c4.xlarge,c4.2xlarge,c4.4xlarge,c4.8xlarge,c5.large,c5.xlarge,c5.2xlarge,c5.4xlarge,c5.9xlarge,c5.12xlarge,c5.18xlarge,c5.24xlarge,c5.metal,c5d.large,c5d.xlarge,c5d.2xlarge,c5d.4xlarge,c5d.9xlarge,c5d.18xlarge,c5n.large,c5n.xlarge,c5n.2xlarge,c5n.4xlarge,c5n.9xlarge,c5n.18xlarge,r4.large,r4.xlarge,r4.2xlarge,r4.4xlarge,r4.8xlarge,r4.16xlarge,r5.large,r5.xlarge,r5.2xlarge,r5.4xlarge,r5.8xlarge,r5.12xlarge,r5.16xlarge,r5.24xlarge,r5.metal,r5a.large,r5a.xlarge,r5a.2xlarge,r5a.4xlarge,r5a.8xlarge,r5a.12xlarge,r5a.16xlarge,r5a.24xlarge,r5ad.large,r5ad.xlarge,r5ad.2xlarge,r5ad.4xlarge,r5ad.12xlarge,r5ad.24xlarge,r5d.large,r5d.xlarge,r5d.2xlarge,r5d.4xlarge,r5d.8xlarge,r5d.12xlarge,r5d.16xlarge,r5d.24xlarge,r5d.metal,u-6tb1.metal,u-9tb1.metal,u-12tb1.metal,x1.16xlarge,x1.32xlarge,x1e.xlarge,x1e.2xlarge,x1e.4xlarge,x1e.8xlarge,x1e.16xlarge,x1e.32xlarge,z1d.large,z1d.xlarge,z1d.2xlarge,z1d.3xlarge,z1d.6xlarge,z1d.12xlarge,z1d.metal,d2.xlarge,d2.2xlarge,d2.4xlarge,d2.8xlarge,h1.2xlarge,h1.4xlarge,h1.8xlarge,h1.16xlarge,i3.large,i3.xlarge,i3.2xlarge,i3.4xlarge,i3.8xlarge,i3.16xlarge,i3.metal,i3en.large,i3en.xlarge,i3en.2xlarge,i3en.3xlarge,i3en.6xlarge,i3en.12xlarge,i3en.24xlarge,f1.2xlarge,f1.4xlarge,f1.16xlarge,g3s.xlarge,g3.4xlarge,g3.8xlarge,g3.16xlarge,p2.xlarge,p2.8xlarge,p2.16xlarge,p3.2xlarge,p3.8xlarge,p3.16xlarge,p3dn.24xlarge]
    Description: Size of Instances in the Private Subnet
  
  BastionHostsKey:
    Type: AWS::EC2::KeyPair::KeyName
    Description: EC2 Key pair for Bastion Hosts
  
  PrivateInstancesKey:
    Type: AWS::EC2::KeyPair::KeyName
    Description: EC2 Key pair for instances in the private subnet
    
  BstionHostsAMI:
    Type: AWS::EC2::Image::Id
    Description: Amazon EC2 image ID for Bastion Hosts
    Default: ami-0d8f6eb4f641ef691

  PrivateInstancesAMI:
    Type: AWS::EC2::Image::Id
    Description: Amazon EC2 image ID for instances in the private subnet
    Default: ami-0d8f6eb4f641ef691

Resources:
  
  #VPC  
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: vpc
  #Internet Gateway and Attachment
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  
  #AZ1
  
  #Public Subnet AZ1
  PublicSubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.128.0/20
      AvailabilityZone: !Ref AvailabilityZone1     
      Tags:
      - Key: Name
        Value: public-subnet-az-1
  #Private Subnet AZ1
  PrivateSubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/19
      AvailabilityZone: !Ref AvailabilityZone1 
      Tags:
      - Key: Name
        Value: private-subnet-az-1
  #Public Route Table
  PublicRouteTableAZ1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: public-subnet-route-table-az-1
  PublicRouteAZ1:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTableAZ1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  #Private Route Table
  PrivateRouteTableAZ1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: private-subnet-route-table-az-1
  PrivateRouteAZ1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableAZ1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGatewayAZ1
  #NAT Gateway
  NATGatewayAZ1:
   Type: AWS::EC2::NatGateway
   Properties:
     AllocationId: !GetAtt ElasticIPAddressAZ1.AllocationId
     SubnetId: !Ref PublicSubnetAZ1
     Tags:
     - Key: Name
       Value: nat-gateway-az-1
  ElasticIPAddressAZ1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: VPC
  #Route Table Association
  PublicSubnetRouteTableAssociationAZ1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetAZ1
      RouteTableId: !Ref PublicRouteTableAZ1
  PrivateSubnetRouteTableAssociationAZ1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetAZ1
      RouteTableId: !Ref PrivateRouteTableAZ1
  
  #AZ2
  
  #Public Subnet AZ2
  PublicSubnetAZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.144.0/20
      AvailabilityZone: !Ref AvailabilityZone2     
      Tags:
      - Key: Name
        Value: public-subnet-az-2
  #Private Subnet AZ2
  PrivateSubnetAZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.32.0/19
      AvailabilityZone: !Ref AvailabilityZone2
      Tags:
      - Key: Name
        Value: private-subnet-az-2
  #Public Route Table
  PublicRouteTableAZ2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: public-subnet-route-table-az-2
  PublicRouteAZ2:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTableAZ2
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  #Private Route Table
  PrivateRouteTableAZ2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: private-subnet-route-table-az-2
  PrivateRouteAZ2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableAZ2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGatewayAZ2
  #NAT Gateway
  NATGatewayAZ2:
   Type: AWS::EC2::NatGateway
   Properties:
     AllocationId: !GetAtt ElasticIPAddressAZ2.AllocationId
     SubnetId: !Ref PublicSubnetAZ2
     Tags:
     - Key: Name
       Value: nat-gateway-az-2
  ElasticIPAddressAZ2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: VPC
  #Route Table Association
  PublicSubnetRouteTableAssociationAZ2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetAZ2
      RouteTableId: !Ref PublicRouteTableAZ2
  PrivateSubnetRouteTableAssociationAZ2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetAZ2
      RouteTableId: !Ref PrivateRouteTableAZ2
  
  #Bastion Security Group
  BastionSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enables SSH Access to Bastion Hosts
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress: 
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 0
          ToPort: 65535

#VPC Resources

  BastionHostsLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: Bastion-Hosts-Launch-Template
      LaunchTemplateData:  
        ImageId: !Ref BstionHostsAMI
        InstanceType: !Ref BastionHostsInstanceType
        KeyName: !Ref BastionHostsKey
        UserData:
          Fn::Base64:
            !Sub |
              #! /bin/bash
              sudo mkdir -p /var/lib/sftd
              echo '${EnrollmentToken}' | sudo tee /var/lib/sftd/enrollment.token
              sudo mkdir -p /etc/sft/
              sftcfg=$(cat <<EOF
              ---
              AltNames: ["bastion"]
              EOF
              )
              echo -e "$sftcfg" | sudo tee /etc/sft/sftd.yaml
              export DEBIAN_FRONTEND=noninteractive
              echo "deb https://pkg.scaleft.com/deb linux main" | sudo tee -a /etc/apt/sources.list
              curl -C - https://dist.scaleft.com/pki/scaleft_deb_key.asc | sudo apt-key add -
              sudo apt-get update
              sudo apt-get install scaleft-server-tools
  
  #AZ1
  BastionHostAZ1:
    Type: AWS::EC2::Instance
    Properties: 
      AvailabilityZone: !Ref AvailabilityZone1
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId: !Ref PublicSubnetAZ1
          GroupSet:
            - !GetAtt BastionSecurityGroup.GroupId
      LaunchTemplate:
        LaunchTemplateId: !Ref BastionHostsLaunchTemplate
        Version: !GetAtt BastionHostsLaunchTemplate.LatestVersionNumber
      Tags: 
        - Key: Name
          Value: bastion-az-1
  
  PrivateInstanceAZ1:
    Type: AWS::EC2::Instance
    Properties: 
      AvailabilityZone: !Ref AvailabilityZone1
      SubnetId: !Ref PrivateSubnetAZ1
      ImageId: !Ref PrivateInstancesAMI
      InstanceType: !Ref PrivateInstancesType
      KeyName: !Ref PrivateInstancesKey
      Tags: 
        - Key: Name
          Value: !Ref TargetServer1Name
      UserData:
        Fn::Base64:
          !Sub |
            #! /bin/bash
            sudo mkdir -p /var/lib/sftd
            echo '${EnrollmentToken}' | sudo tee /var/lib/sftd/enrollment.token
            sudo mkdir -p /etc/sft/
            sftcfg=$(cat <<EOF
            ---
            AltNames: ["${TargetServer1Name}"]
            Bastion: 'bastion'
            EOF
            )
            echo -e "$sftcfg" | sudo tee /etc/sft/sftd.yaml
            export DEBIAN_FRONTEND=noninteractive
            echo "deb https://pkg.scaleft.com/deb linux main" | sudo tee -a /etc/apt/sources.list
            curl -C - https://dist.scaleft.com/pki/scaleft_deb_key.asc | sudo apt-key add -
            sudo apt-get update
            sudo apt-get install scaleft-server-tools

  #AZ2
  BastionHostAZ2:
    Type: AWS::EC2::Instance
    Properties: 
      AvailabilityZone: !Ref AvailabilityZone2
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId: !Ref PublicSubnetAZ2
          GroupSet:
            - !GetAtt BastionSecurityGroup.GroupId
      LaunchTemplate:
        LaunchTemplateId: !Ref BastionHostsLaunchTemplate
        Version: !GetAtt BastionHostsLaunchTemplate.LatestVersionNumber
      Tags: 
        - Key: Name
          Value: bastion-az-2
  
  PrivateInstanceAZ2:
    Type: AWS::EC2::Instance
    Properties: 
      AvailabilityZone: !Ref AvailabilityZone2
      SubnetId: !Ref PrivateSubnetAZ2
      ImageId: !Ref PrivateInstancesAMI
      InstanceType: !Ref PrivateInstancesType
      KeyName: !Ref PrivateInstancesKey
      Tags: 
        - Key: Name
          Value: !Ref TargetServer2Name
      UserData:
        Fn::Base64:
          !Sub |
            #! /bin/bash
            sudo mkdir -p /var/lib/sftd
            echo '${EnrollmentToken}' | sudo tee /var/lib/sftd/enrollment.token
            sudo mkdir -p /etc/sft/
            sftcfg=$(cat <<EOF
            ---
            AltNames: ["${TargetServer2Name}"]
            Bastion: 'bastion'
            EOF
            )
            echo -e "$sftcfg" | sudo tee /etc/sft/sftd.yaml
            export DEBIAN_FRONTEND=noninteractive
            echo "deb https://pkg.scaleft.com/deb linux main" | sudo tee -a /etc/apt/sources.list
            curl -C - https://dist.scaleft.com/pki/scaleft_deb_key.asc | sudo apt-key add -
            sudo apt-get update
            sudo apt-get install scaleft-server-tools